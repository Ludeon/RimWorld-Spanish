<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>damaged_inf->bite</li>
    <li>damaged_inf->chomp</li>
    <li>damaged_inf(p=0.5)->nip</li>
    <li>damaged_past->bit</li>
    <li>damaged_past->chomped</li>
    <li>damaged_past->nipped</li>
    <li>damaged_past->gnawed</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_present->biting</li>
    <li>damaged_present->chomping</li>
    <li>damaged_present->nipped</li>
    <li>damaged_present->gnawing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving grisly tears in the skin</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->leaving grisly tears in the metal</li>
    <li>destroyed_past->tore off</li>
    <li>destroyed_past->ripped off</li>
    <li>destroyed_past->bit off</li>
    <li>destroyed_present->tearing off</li>
    <li>destroyed_present->ripping off</li>
    <li>destroyed_present->biting off</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix->[to] chunks</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] shreds</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] an unrecognizable mess</li>
  -->
  <Maneuver_Bite.rulePack.rulesStrings>
    <li>damaged_inf->morder</li>
    <li>damaged_inf->dentellear</li>
    <li>damaged_inf(p=0.5)->cortar</li>
    <li>damaged_past->mordido</li>
    <li>damaged_past->dentellado</li>
    <li>damaged_past->cortado</li>
    <li>damaged_past->dentellando</li>
    <li>damaged_past(deflected!=True)->rasgado</li>
    <li>damaged_present->mordiendo</li>
    <li>damaged_present->dentellando</li>
    <li>damaged_present->cortando</li>
    <li>damaged_present->mordisqueando</li>
    <li>damaged_present(deflected!=True)->desgarrando</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejándolo en carne viva</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->dejando a la vista piezas de maquinaria</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando manchas grasientas en la piel</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->dejando manchas grasientas en el metal</li>
    <li>destroyed_past->arrancado</li>
    <li>destroyed_past->separado</li>
    <li>destroyed_past->rasgado</li>
    <li>destroyed_past->devastado</li>
    <li>destroyed_present->arrancando</li>
    <li>destroyed_present->separando</li>
    <li>destroyed_present->desgarrando</li>
    <li>destroyed_present->devastando</li>
    <li>destroyed_suffix->[to] fragmentos</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] tiras</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] tiras desordenadas</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] un desastre irreconocible</li>
  </Maneuver_Bite.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] dodged out of the way.</li>
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] blocked it.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] intentó tirar [TOOL_label] a los ojos de [RECIPIENT_definite], pero [RECIPIENT_definite] lo esquivó.</li>
    <li>r_logentry->[INITIATOR_definite] intentó tirar [TOOL_label] a los ojos de [RECIPIENT_definite], pero [RECIPIENT_definite] lo bloqueó.</li>
  </Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] kicked [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] kicked a spray of [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] tiró [TOOL_label] en los ojos de [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] esparció [TOOL_label] en los ojos de [RECIPIENT_definite].</li>
  </Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but missed.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] intentó tirar [TOOL_label] a los ojos de [RECIPIENT_definite], pero falló.</li>
  </Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=2)->poke</li>
    <li>damaged_inf(p=2)->jab</li>
    <li>damaged_inf->prod</li>
    <li>damaged_inf->shove</li>
    <li>damaged_inf->stab</li>
    <li>damaged_past(p=2)->poked</li>
    <li>damaged_past(p=2)->jabbed</li>
    <li>damaged_past->prodded</li>
    <li>damaged_past->shoved</li>
    <li>damaged_past->stabbed</li>
    <li>damaged_present(p=2)->poking</li>
    <li>damaged_present(p=2)->jabbing</li>
    <li>damaged_present->prodding</li>
    <li>damaged_present->shoving</li>
    <li>damaged_present->stabbing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->obliterated</li>
    <li>destroyed_past->annihilated</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->obliterating</li>
    <li>destroyed_present->annihilating</li>
    <li>destroyed_present->breaking</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</li>
    <li>destroyed_suffix->[to] fragments</li>
  -->
  <Maneuver_Poke.rulePack.rulesStrings>
    <li>damaged_inf(p=2)->pinchar</li>
    <li>damaged_inf(p=2)->punzar</li>
    <li>damaged_inf->picar</li>
    <li>damaged_inf->empujar</li>
    <li>damaged_inf->apuñalar</li>
    <li>damaged_past(p=2)->pinchado</li>
    <li>damaged_past(p=2)->punzado</li>
    <li>damaged_past->picado</li>
    <li>damaged_past->empujado</li>
    <li>damaged_past->apuñalado</li>
    <li>damaged_present(p=2)->pinchando</li>
    <li>damaged_present(p=2)->punzando</li>
    <li>damaged_present->picando</li>
    <li>damaged_present->empujando</li>
    <li>damaged_present->apuñalando</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un enorme hematoma</li>
    <li>flavortext_consequence->dejando el área visiblemente deformada</li>
    <li>flavortext_consequence->que [RECIPIENT_objective] hace perder el equilibrio</li>
    <li>flavortext_consequence->golpeándo[RECIPIENT_objective] a un lado</li>
    <li>destroyed_past->destrozado</li>
    <li>destroyed_past->aplastado</li>
    <li>destroyed_past->destruido</li>
    <li>destroyed_past->aniquilado</li>
    <li>destroyed_past->roto</li>
    <li>destroyed_present->destrozando</li>
    <li>destroyed_present->aplastando</li>
    <li>destroyed_present->destruyendo</li>
    <li>destroyed_present->aniquilando</li>
    <li>destroyed_present->rompiendo</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] pedazos</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] una fina niebla</li>
    <li>destroyed_suffix->[to] fragmentos</li>
  </Maneuver_Poke.rulePack.rulesStrings>
  
  <!-- EN:
    <li>woundname->wound</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->and exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and leaving a gory [woundname]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy pieces</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] fragments</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a pile of gore</li>
  -->
  <Maneuver_Scratch.rulePack.rulesStrings>
    <li>woundname->herida</li>
    <li>woundname(p=0.3)->laceración</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->con la sangre que gotea de la [woundname]</li>
    <li>flavortext_situation->con fluidos que gotean de la [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->y exponiendo la carne que está debajo</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->y exponiendo la maquinaria que está debajo</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->y dejando una sangrienta [woundname]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] tiras desordenadas</li>
    <li>destroyed_suffix->[to] tiras</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] piezas desordenadas</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] fragmentos</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] un montón de sangre</li>
  </Maneuver_Scratch.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->scratch</li>
    <li>damaged_inf(deflected!=True)->lacerate</li>
    <li>damaged_inf(deflected!=True)->tear</li>
    <li>damaged_inf->cut</li>
    <li>damaged_past(p=4)->scratched</li>
    <li>damaged_past(deflected!=True)->lacerated</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_past->cut</li>
    <li>damaged_present->scratching</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present->cutting</li>
    <li>destroyed_past->mauled</li>
    <li>destroyed_past->lacerated</li>
    <li>destroyed_past->tore</li>
    <li>destroyed_past->shredded</li>
    <li>destroyed_past->ripped</li>
    <li>destroyed_present->mauling</li>
    <li>destroyed_present->lacerating</li>
    <li>destroyed_present->tearing</li>
    <li>destroyed_present->shredding</li>
    <li>destroyed_present->ripping</li>
  -->
  <Maneuver_Scratch_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->arañar</li>
    <li>damaged_inf(deflected!=True)->lacerar</li>
    <li>damaged_inf(deflected!=True)->desgarrar</li>
    <li>damaged_inf->cortar</li>
    <li>damaged_past(p=4)->arañado</li>
    <li>damaged_past(deflected!=True)->lacerado</li>
    <li>damaged_past(deflected!=True)->desgarrado</li>
    <li>damaged_past->cortado</li>
    <li>damaged_present->arañando</li>
    <li>damaged_present(deflected!=True)->lacerando</li>
    <li>damaged_present(deflected!=True)->desgarrando</li>
    <li>damaged_present->cortando</li>
    <li>destroyed_past->golpeado</li>
    <li>destroyed_past->lacerado</li>
    <li>destroyed_past->desprendido</li>
    <li>destroyed_past->triturado</li>
    <li>destroyed_past->desgarrado</li>
    <li>destroyed_present->golpeando</li>
    <li>destroyed_present->lacerando</li>
    <li>destroyed_present->desprediendo</li>
    <li>destroyed_present->triturando</li>
    <li>destroyed_present->desgarrando</li>
  </Maneuver_Scratch_Damage.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->slash</li>
    <li>damaged_inf->cut</li>
    <li>damaged_inf->chop</li>
    <li>damaged_inf->hack</li>
    <li>damaged_inf->slice</li>
    <li>damaged_inf(deflected!=True)->gash</li>
    <li>damaged_past(p=4)->slashed</li>
    <li>damaged_past->cut</li>
    <li>damaged_past->chopped</li>
    <li>damaged_past->hacked</li>
    <li>damaged_past->sliced</li>
    <li>damaged_past(deflected!=True)->gashed</li>
    <li>damaged_present->slashing</li>
    <li>damaged_present->cutting</li>
    <li>damaged_present->slicing</li>
    <li>damaged_present(deflected!=True)->gashing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>woundname->wound</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a gory [woundname]</li>
    <li>destroyed_past->bisected</li>
    <li>destroyed_past->divided</li>
    <li>destroyed_past->halved</li>
    <li>destroyed_past->separated</li>
    <li>destroyed_past->split</li>
    <li>destroyed_present->bisecting</li>
    <li>destroyed_present->dividing</li>
    <li>destroyed_present->halving</li>
    <li>destroyed_present->separating</li>
    <li>destroyed_present->splitting</li>
    <li>destroyed_suffix->into neat pieces</li>
    <li>destroyed_suffix->cleanly</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->exposing its inner workings</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->slicing it in twain</li>
  -->
  <Maneuver_Slash.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->tajar</li>
    <li>damaged_inf->cortar</li>
    <li>damaged_inf->trocear</li>
    <li>damaged_inf->picar</li>
    <li>damaged_inf->rajar</li>
    <li>damaged_inf(deflected!=True)->desgarrar</li>
    <li>damaged_past(p=4)->tajado</li>
    <li>damaged_past->cortado</li>
    <li>damaged_past->troceado</li>
    <li>damaged_past->picado</li>
    <li>damaged_past->rajado</li>
    <li>damaged_past(deflected!=True)->desgarrado</li>
    <li>damaged_present->tajando</li>
    <li>damaged_present->cortando</li>
    <li>damaged_present->troceando</li>
    <li>damaged_present(deflected!=True)->rajando</li>
    <li>damaged_present(deflected!=True)->desgarrando</li>
    <li>damaged_present(deflected!=True)->picando</li>
    <li>woundname->herida</li>
    <li>woundname(p=0.3)->laceración</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->con sangre goteando de la [woundname]</li>
    <li>flavortext_situation->con fluidos goteando de la [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exponiendo la carne debajo</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exponiendo los mecanismos debajo</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando una sangrienta [woundname]</li>
    <li>destroyed_past->biseccionado</li>
    <li>destroyed_past->dividido</li>
    <li>destroyed_past->cortado a la mitad</li>
    <li>destroyed_past->separado</li>
    <li>destroyed_past->partido en dos</li>
    <li>destroyed_present->biseccionando</li>
    <li>destroyed_present->dividiendo</li>
    <li>destroyed_present->cortando a la mitad</li>
    <li>destroyed_present->separando</li>
    <li>destroyed_present->partiendo en dos</li>
    <li>destroyed_suffix->en piezas ordenadas</li>
    <li>destroyed_suffix->limpiamente</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->exponiendo su mecanismo interno</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->rebanándolo en dos</li>
  </Maneuver_Slash.rulePack.rulesStrings>
  
  <!-- EN:
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</li>
    <li>destroyed_suffix->[to] fragments</li>
  -->
  <Maneuver_Smash.rulePack.rulesStrings>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un enorme hematoma</li>
    <li>flavortext_consequence->dejando el área visiblemente deformada</li>
    <li>flavortext_consequence->desequilibrando[RECIPIENT_objective]</li>
    <li>flavortext_consequence->golpeándo[RECIPIENT_objective] hacia un lado</li>
    <li>destroyed_suffix->[to] piezas</li>
    <li>destroyed_suffix->[to] pedacitos</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] una fina niebla</li>
    <li>destroyed_suffix->[to] fragmentos</li>
  </Maneuver_Smash.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf->hit</li>
    <li>damaged_inf->smash</li>
    <li>damaged_inf->bash</li>
    <li>damaged_inf->slam</li>
    <li>damaged_inf->strike</li>
    <li>damaged_inf->beat</li>
    <li>damaged_past->hit</li>
    <li>damaged_past->smashed</li>
    <li>damaged_past->bashed</li>
    <li>damaged_past->slammed</li>
    <li>damaged_past->struck</li>
    <li>damaged_past->beat</li>
    <li>damaged_present->smashing</li>
    <li>damaged_present->bashing</li>
    <li>damaged_present(deflected!=True)->bruising</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->breaking</li>
  -->
  <Maneuver_Smash_Damage.rulePack.rulesStrings>
    <li>damaged_inf->golpear</li>
    <li>damaged_inf->aplastar</li>
    <li>damaged_inf->azotar</li>
    <li>damaged_inf->aporrear</li>
    <li>damaged_inf->fustigar</li>
    <li>damaged_inf->magullar</li>
    <li>damaged_past->golpeado</li>
    <li>damaged_past->aplastado</li>
    <li>damaged_past->azotado</li>
    <li>damaged_past->aporreado</li>
    <li>damaged_past->fustigado</li>
    <li>damaged_past->magullado</li>
    <li>damaged_present->aplastando</li>
    <li>damaged_present->azotado</li>
    <li>damaged_present(deflected!=True)->magullando</li>
    <li>destroyed_past->destrozado</li>
    <li>destroyed_past->machacado</li>
    <li>destroyed_past->roto</li>
    <li>destroyed_present->destrozando</li>
    <li>destroyed_present->machacando</li>
    <li>destroyed_present->rompiendo</li>
  </Maneuver_Smash_Damage.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->stab</li>
    <li>damaged_inf->jab</li>
    <li>damaged_inf(deflected!=True)->pierce</li>
    <li>damaged_inf(deflected!=True)->puncture</li>
    <li>damaged_inf(deflected!=True)->skewer</li>
    <li>damaged_past(p=4)->stabbed</li>
    <li>damaged_past->jabbed</li>
    <li>damaged_past(deflected!=True)->pierced</li>
    <li>damaged_past(deflected!=True)->punctured</li>
    <li>damaged_past(deflected!=True)->skewered</li>
    <li>damaged_present(deflected!=True)->piercing</li>
    <li>damaged_present(deflected!=True)->puncturing</li>
    <li>damaged_present(deflected!=True)->penetrating</li>
    <li>damaged_present(deflected!=True)->skewering</li>
    <li>woundname->hole</li>
    <li>woundname->wound</li>
    <li>woundname->crevice</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bloody [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a torn [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bleeding [woundname]</li>
    <li>destroyed_past->impaled</li>
    <li>destroyed_past->perforated</li>
    <li>destroyed_past->skewered</li>
    <li>destroyed_present->impaling</li>
    <li>destroyed_present->perforating</li>
    <li>destroyed_present->skewering</li>
    <li>destroyed_suffix->straight through</li>
    <li>destroyed_suffix->leaving a clean hole</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->leaving it leaking gory fluids</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->leaving it leaking unrecognizable fluids</li>
  -->
  <Maneuver_Stab.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->apuñalar</li>
    <li>damaged_inf->pinchar</li>
    <li>damaged_inf(deflected!=True)->penetrar</li>
    <li>damaged_inf(deflected!=True)->punzar</li>
    <li>damaged_inf(deflected!=True)->perforar</li>
    <li>damaged_past(p=4)->apuñalado</li>
    <li>damaged_past->pinchado</li>
    <li>damaged_past(deflected!=True)->penetrado</li>
    <li>damaged_past(deflected!=True)->punzado</li>
    <li>damaged_past(deflected!=True)->perforado</li>
    <li>damaged_present(deflected!=True)->atravesando</li>
    <li>damaged_present(deflected!=True)->perforando</li>
    <li>damaged_present(deflected!=True)->penetrando</li>
    <li>damaged_present(deflected!=True)->ensantando</li>
    <li>woundname_mas->agujero</li>
    <li>woundname->herida</li>
    <li>woundname->hendidura</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando una sangrienta [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un sangriento [woundname_mas]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando una desgarradora [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejando un desgarrador [woundname_mas]</li>
    <li>destroyed_past->empalado</li>
    <li>destroyed_past->perforado</li>
    <li>destroyed_past(p=0.3)->ensartado</li>
    <li>destroyed_present->empalando</li>
    <li>destroyed_present->perforando</li>
    <li>destroyed_present(p=0.3)->ensartando</li>
    <li>destroyed_suffix->dejando un gran agujero</li>
    <li>destroyed_suffix->dejando un agujero limpio</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->dejándole con fugas de fluidos sangrientos</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->dejándole con fugas de líquidos irreconocibles</li>
  </Maneuver_Stab.rulePack.rulesStrings>
  
</LanguageData>