<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>scraped_present->glancing</li>
    <li>scraped_present->bouncing</li>
    <li>scraped_present->grazing</li>
    <li>scraped_present->caroming</li>
    <li>scraped_present->skipping</li>
    <li>scraped_present->skating</li>
    <li>scraped_past->glanced</li>
    <li>scraped_past->bounced</li>
    <li>scraped_past->grazed</li>
    <li>scraped_past->caromed</li>
    <li>scraped_past->skipped</li>
    <li>scraped_past->skated</li>
  -->
  <Combat_DeflectIncludes.rulePack.rulesStrings>
    <li>scraped_present->golpeándole y desviándose</li>
    <li>scraped_present->rebotando</li>
    <li>scraped_present->raspando</li>
    <li>scraped_present->golpeándole y rebotando</li>
    <li>scraped_present->saltando</li>
    <li>scraped_present->patinando en</li>
    <li>scraped_past->le golpeó y se desvió</li>
    <li>scraped_past->ha rebotado</li>
    <li>scraped_past->le ha raspado</li>
    <li>scraped_past->ha rebotado</li>
    <li>scraped_past->le ha saltado</li>
    <li>scraped_past->se ha dezlizado</li>
  </Combat_DeflectIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite] with [implement]</li>
    <li>action->[INITIATOR_definite] [tried] to use [implement] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] swung [INITIATOR_possessive] [WEAPON_label] at [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] with [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] with [implement]</li>
    <li>towardsat->towards</li>
    <li>towardsat->at</li>
    <li>verb_genericattack->swung</li>
    <li>verb_genericattack->flailed</li>
    <li>verb_genericattack->thrashed</li>
    <li>tried->tried</li>
    <li>tried->attempted</li>
  -->
  <Combat_FailIncludes.rulePack.rulesStrings>
    <li>action->[INITIATOR_definite] [tried] de [damaged_inf] a [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [tried] de [damaged_inf] a [RECIPIENT_definite] con [implement]</li>
    <li>action->[INITIATOR_definite] [tried] usar [implement] para [damaged_inf] a [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] balanceó [INITIATOR_possessive] [WEAPON_label], rozando a [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] se ha [verb_genericattack] [towardsat] [RECIPIENT_definite] con [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] se ha [verb_genericattack] [towardsat] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] se ha [verb_genericattack] con [implement]</li>
    <li>towardsat->en dirección a</li>
    <li>towardsat->en torno a</li>
    <li>verb_genericattack->girado</li>
    <li>verb_genericattack->movido</li>
    <li>verb_genericattack->balanceado</li>
    <li>tried->intentó</li>
    <li>tried->trató</li>
  </Combat_FailIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>result(p=1)->[damaged_present] [RECIPIENT_possessive] [targetlist]</li>
    <li>result(p=0.2)->[damaged_present] [RECIPIENT_possessive] [targetlist] and [flavortext_consequence]</li>
    <li>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [strikeAdv]</li>
    <li>strikeAdv->painfully</li>
    <li>strikeAdv->horribly</li>
    <li>strikeAdv->savagely</li>
    <li>strikeAdv->viciously</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a disgusting wound</li>
    <li>flavortext_consequence->leaving a horrific wound</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->making [RECIPIENT_objective] [wince] [painevent]</li>
    <li>flavortext_consequence(p=0.2)->throwing [RECIPIENT_objective] off balance</li>
  -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings>
    <li>result(p=1)->[damaged_present] [RECIPIENT_possessive] [targetlist]</li>
    <li>result(p=0.2)->[damaged_present] [RECIPIENT_possessive] [targetlist] y [flavortext_consequence]</li>
    <li>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [strikeAdv]</li>
    <li>strikeAdv->dolorosamente</li>
    <li>strikeAdv->horriblemente</li>
    <li>strikeAdv->salvajemente</li>
    <li>strikeAdv->despiadadamente</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->dejándole una asquerosa herida</li>
    <li>flavortext_consequence->dejándole una herida horrible</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->haciéndo[RECIPIENT_objective] [wince] [painevent]</li>
    <li>flavortext_consequence(p=0.2)->desequilibrándo[RECIPIENT_objective]</li>
  </Combat_MeleeDamageIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[action], [result].</li>
    <li>r_logentry(priority=-10)->[action].</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->a [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->a [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=2)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>targetlist(recipient_part_count==1)->[recipient_part0_label]</li>
    <li>targetlist(recipient_part_count==2)->[recipient_part0_label] and [recipient_part1_label]</li>
    <li>targetlist(recipient_part_count==3)->[recipient_part0_label], [recipient_part1_label], and [recipient_part2_label]</li>
    <li>targetlist->[recipient_part0_label], [recipient_part1_label], [recipient_part2_label], and [recipient_part3_label]</li>
    <li>damaged_present(deflected!=True)->wounding</li>
    <li>damaged_present(deflected!=True)->injuring</li>
    <li>destroyed(p=0.5)->destroyed</li>
    <li>destroyed(p=0.5)->demolished</li>
    <li>destroyed(p=0.5)->ruined</li>
    <li>destroyed(p=0.5)->wrecked</li>
    <li>wince(recipient_flesh==Normal)->wince</li>
    <li>wince(recipient_flesh==Normal)->grimace</li>
    <li>wince(recipient_flesh==Normal)->cringe</li>
    <li>wince(recipient_flesh==Normal)->groan</li>
    <li>wince(recipient_flesh!=Mechanoid)->scream</li>
    <li>wince(recipient_flesh!=Mechanoid)->shout</li>
    <li>wince->recoil</li>
    <li>wince->stumble</li>
    <li>painstate->in</li>
    <li>painstate->with</li>
    <li>painstate->from the</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] pain</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] agony</li>
    <li>painevent(recipient_flesh==Normal)->with misery</li>
    <li>painevent->from the injury</li>
    <li>painevent->from the wound</li>
    <li>to->to</li>
    <li>to->into</li>
  -->
  <Combat_MeleeIncludes.rulePack.rulesStrings>
    <li>r_logentry->[action], [result].</li>
    <li>r_logentry(priority=-10)->[action].</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=2)->[TOOL_definite] de [INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->[TOOL_definite] de [WEAPON_indefinite]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->[WEAPON_indefinite]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=2)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=2)->[TOOL_definite] de [INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>targetlist(recipient_part_count==1)->[recipient_part0_label]</li>
    <li>targetlist(recipient_part_count==2)->[recipient_part0_label] y [recipient_part1_label]</li>
    <li>targetlist(recipient_part_count==3)->[recipient_part0_label], [recipient_part1_label], y [recipient_part2_label]</li>
    <li>targetlist->[recipient_part0_label], [recipient_part1_label], [recipient_part2_label], y [recipient_part3_label]</li>
    <li>damaged_present(deflected!=True)->hiriendo</li>
    <li>damaged_present(deflected!=True)->lesionando</li>
    <li>destroyed(p=0.5)->destruido</li>
    <li>destroyed(p=0.5)->demolido</li>
    <li>destroyed(p=0.5)->arruinado</li>
    <li>destroyed(p=0.5)->destrozado</li>
    <li>wince(recipient_flesh==Normal)->estremecerse</li>
    <li>wince(recipient_flesh==Normal)->retorcerse</li>
    <li>wince(recipient_flesh==Normal)->encogerse</li>
    <li>wince(recipient_flesh==Normal)->gemir</li>
    <li>wince(recipient_flesh!=Mechanoid)->gritar</li>
    <li>wince(recipient_flesh!=Mechanoid)->chillar</li>
    <li>wince->retroceder</li>
    <li>wince->tropezar</li>
    <li>painstate->de</li>
    <li>painstate->con</li>
    <li>painstate->del</li>
    <li>painstate1->con</li>
    <li>painstate1->de la</li>
    <li>painstate1->de</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] dolor</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate1] agonía</li>
    <li>painevent(recipient_flesh==Normal)->miserablemente</li>
    <li>painevent->dolorosamente</li>
    <li>painevent->agonicamente</li>
    <li>to->a</li>
    <li>to->en</li>
  </Combat_MeleeIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>skillDescMelee->[wielding] [INITIATOR_possessive] [WEAPON_label] [skillAdv]</li>
    <li>skillDescMelee->[using] [implement] [skillAdv]</li>
    <li>wielding(p=4)->wielding</li>
    <li>wielding(p=3)->using</li>
    <li>wielding(p=2)->handling</li>
    <li>wielding->brandishing</li>
    <li>wielding->manipulating</li>
    <li>using(p=4)->using</li>
    <li>using->driving</li>
    <li>using->thrusting</li>
    <li>using->utilizing</li>
    <li>using->moving</li>
    <li>skillAdv(INITIATOR_skill<=3)->incompetently</li>
    <li>skillAdv(INITIATOR_skill<=3)->ineptly</li>
    <li>skillAdv(INITIATOR_skill<=3)->wildly</li>
    <li>skillAdv(INITIATOR_skill<=3)->randomly</li>
    <li>skillAdv(INITIATOR_skill<=3)->flailingly</li>
    <li>skillAdv(INITIATOR_skill<=4)->awkwardly</li>
    <li>skillAdv(INITIATOR_skill<=4)->clumsily</li>
    <li>skillAdv(INITIATOR_skill<=5)->fearfully</li>
    <li>skillAdv(INITIATOR_skill<=5)->falteringly</li>
    <li>skillAdv(INITIATOR_skill<=5)->foolishly</li>
    <li>skillAdv(INITIATOR_skill<=6)->hesitantly</li>
    <li>skillAdv(INITIATOR_skill<=6)->reluctantly</li>
    <li>skillAdv(INITIATOR_skill<=6)->slowly</li>
    <li>skillAdv(INITIATOR_skill<=6)->tentatively</li>
    <li>skillAdv(INITIATOR_skill<=6)->inexpertly</li>
    <li>skillAdv(INITIATOR_skill<=6)->amateurishly</li>
    <li>skillAdv(INITIATOR_skill<=6)->timidly</li>
    <li>skillAdv(INITIATOR_skill<=8)->enthusiastically</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->proficiently</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->competently</li>
    <li>skillAdv(INITIATOR_skill>=8)->professionally</li>
    <li>skillAdv(INITIATOR_skill>=8)->deftly</li>
    <li>skillAdv(INITIATOR_skill>=8)->aptly</li>
    <li>skillAdv(INITIATOR_skill>=8)->cleverly</li>
    <li>skillAdv(INITIATOR_skill>=8)->dexterously</li>
    <li>skillAdv(INITIATOR_skill>=8)->skillfully</li>
    <li>skillAdv(INITIATOR_skill>=10)->adeptly</li>
    <li>skillAdv(INITIATOR_skill>=10)->slickly</li>
    <li>skillAdv(INITIATOR_skill>=12)->expertly</li>
    <li>skillAdv(INITIATOR_skill>=12)->precisely</li>
    <li>skillAdv(INITIATOR_skill>=14)->masterfully</li>
    <li>skillAdv(INITIATOR_skill>=16)->artistically</li>
    <li>skillAdv(INITIATOR_skill>=16)->gracefully</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->mechanically</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->robotically</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->directly</li>
  -->
  <Combat_SkillIncludes.rulePack.rulesStrings>
    <li>skillDescMelee->[wielding] [INITIATOR_possessive] [WEAPON_label] [skillAdv]</li>
    <li>skillDescMelee->[using] [implement] [skillAdv]</li>
    <li>wielding(p=4)->blandiendo</li>
    <li>wielding(p=3)->usando</li>
    <li>wielding(p=2)->manejando</li>
    <li>wielding->blandiendo</li>
    <li>wielding->manipulando</li>
    <li>using(p=4)->usando</li>
    <li>using->manejando</li>
    <li>using->maniobrando</li>
    <li>using->utilizando</li>
    <li>using->moviendo</li>
    <li>skillAdv(INITIATOR_skill&lt;=3)->incompetentemente</li>
    <li>skillAdv(INITIATOR_skill&lt;=3)->ineptamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=3)->salvajemente</li>
    <li>skillAdv(INITIATOR_skill&lt;=3)->aleatoreamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=3)->agitadamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=4)->torpemente</li>
    <li>skillAdv(INITIATOR_skill&lt;=4)->tontamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=5)->temerosamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=5)->vacilantemente</li>
    <li>skillAdv(INITIATOR_skill&lt;=5)->neciamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->titubeantemente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->a regañadientes</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->lentamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->tentativamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->inexpertamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->aficionadamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->tímidamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=8)->entusiasmadamente</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill&lt;=10)->hábilmente</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill&lt;=10)->competentemente</li>
    <li>skillAdv(INITIATOR_skill>=8)->profesionalmente</li>
    <li>skillAdv(INITIATOR_skill>=8)->diestramente</li>
    <li>skillAdv(INITIATOR_skill>=8)->adecuadamente</li>
    <li>skillAdv(INITIATOR_skill>=8)->inteligentemente</li>
    <li>skillAdv(INITIATOR_skill>=8)->hábilmente</li>
    <li>skillAdv(INITIATOR_skill>=8)->habilidosamente</li>
    <li>skillAdv(INITIATOR_skill>=10)->experienciadamente</li>
    <li>skillAdv(INITIATOR_skill>=10)->hábilmente</li>
    <li>skillAdv(INITIATOR_skill>=12)->expertamente</li>
    <li>skillAdv(INITIATOR_skill>=12)->acertadamente</li>
    <li>skillAdv(INITIATOR_skill>=14)->magistralmente</li>
    <li>skillAdv(INITIATOR_skill>=16)->artísticamente</li>
    <li>skillAdv(INITIATOR_skill>=16)->agraciadamente</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->mecánicamente</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->robóticamente</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->directamente</li>
  </Combat_SkillIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>destroyed_targets(recipient_part_destroyed_count==1)->[recipient_part_destroyed0_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==2)->[recipient_part_destroyed0_label] and [recipient_part_destroyed1_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==3)->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], and [recipient_part_destroyed2_label]</li>
    <li>destroyed_targets->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], [recipient_part_destroyed2_label], and [recipient_part_destroyed3_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==1)->[recipient_part_damaged0_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==2)->[recipient_part_damaged0_label] and [recipient_part_damaged1_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==3)->[recipient_part_damaged0_label], [recipient_part_damaged1_label], and [recipient_part_damaged2_label]</li>
    <li>damaged_targets->[recipient_part_damaged0_label], [recipient_part_damaged1_label], [recipient_part_damaged2_label], and [recipient_part_damaged3_label]</li>
  -->
  <Combat_WoundIncludes.rulePack.rulesStrings>
    <!--definidos-->
    <li>destroyed_targetsDef(recipient_part_destroyed_count==1)->[recipient_part_destroyed0_definite]</li>
    <li>destroyed_targetsDef(recipient_part_destroyed_count==2)->[recipient_part_destroyed0_definite] y [recipient_part_destroyed1_definite]</li>
    <li>destroyed_targetsDef(recipient_part_destroyed_count==3)->[recipient_part_destroyed0_definite], [recipient_part_destroyed1_definite], y [recipient_part_destroyed2_definite]</li>
    <li>destroyed_targetsDef->[recipient_part_destroyed0_definite], [recipient_part_destroyed1_definite], [recipient_part_destroyed2_definite], y [recipient_part_destroyed3_definite]</li>
    <li>damaged_targetsDef(recipient_part_damaged_count==1)->[recipient_part_damaged0_definite]</li>
    <li>damaged_targetsDef(recipient_part_damaged_count==2)->[recipient_part_damaged0_definite] y [recipient_part_damaged1_definite]</li>
    <li>damaged_targetsDef(recipient_part_damaged_count==3)->[recipient_part_damaged0_definite], [recipient_part_damaged1_definite], y [recipient_part_damaged2_definite]</li>
    <li>damaged_targetsDef->[recipient_part_damaged0_label], [recipient_part_damaged1_definite], [recipient_part_damaged2_definite], y [recipient_part_damaged3_definite]</li>
    <!--Definido para combat Ranged-->
    <li>destroyed_targetsDef1(recipient_part_destroyed_count==1)->[recipient_part_destroyed0_definite]</li>
    <li>destroyed_targetsDef2(recipient_part_destroyed_count==2)->[recipient_part_destroyed0_definite] y [recipient_part_destroyed1_definite]</li>
    <li>destroyed_targetsDef2(recipient_part_destroyed_count==3)->[recipient_part_destroyed0_definite], [recipient_part_destroyed1_definite], y [recipient_part_destroyed2_definite]</li>
    <li>destroyed_targetsDef2->[recipient_part_destroyed0_definite], [recipient_part_destroyed1_definite], [recipient_part_destroyed2_definite], y [recipient_part_destroyed3_definite]</li>
    <li>damaged_targetsDef1(recipient_part_damaged_count==1)->[recipient_part_damaged0_definite]</li>
    <li>damaged_targetsDef2(recipient_part_damaged_count==2)->[recipient_part_damaged0_definite] y [recipient_part_damaged1_definite]</li>
    <li>damaged_targetsDef2(recipient_part_damaged_count==3)->[recipient_part_damaged0_definite], [recipient_part_damaged1_definite], y [recipient_part_damaged2_definite]</li>
    <li>damaged_targetsDef2->[recipient_part_damaged0_label], [recipient_part_damaged1_definite], [recipient_part_damaged2_definite], y [recipient_part_damaged3_definite]</li>
    <!--Sin definir-->
    <li>destroyed_targets(recipient_part_destroyed_count==1)->[recipient_part_destroyed0_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==2)->[recipient_part_destroyed0_label] y [recipient_part_destroyed1_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==3)->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], y [recipient_part_destroyed2_label]</li>
    <li>destroyed_targets->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], [recipient_part_destroyed2_label], y [recipient_part_destroyed3_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==1)->[recipient_part_damaged0_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==2)->[recipient_part_damaged0_label] y [recipient_part_damaged1_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==3)->[recipient_part_damaged0_label], [recipient_part_damaged1_label], y [recipient_part_damaged2_label]</li>
    <li>damaged_targets->[recipient_part_damaged0_label], [recipient_part_damaged1_label], [recipient_part_damaged2_label], y [recipient_part_damaged3_label]</li>
  </Combat_WoundIncludes.rulePack.rulesStrings>
  
</LanguageData>